
form ordering
  task is-eq, name <is_eq>
    note <Returns true if the ordering is the Equal variant.>

    take self
      cite free

    free seed
      like bool
        cite free

  task is-ne, name <is_ne>
    note <Returns true if the ordering is not the Equal variant.>

    take self
      cite free

    free seed
      like bool
        cite free

  task is-lt, name <is_lt>
    note <Returns true if the ordering is the Less variant.>

    take self
      cite free

    free seed
      like bool
        cite free

  task is-gt, name <is_gt>
    note <Returns true if the ordering is the Greater variant.>

    take self
      cite free

    free seed
      like bool
        cite free

  task is-le, name <is_le>
    note <Returns true if the ordering is either the Less or Equal variant.>

    take self
      cite free

    free seed
      like bool
        cite free

  task is-ge, name <is_ge>
    note <Returns true if the ordering is either the Greater or Equal variant.>

    take self
      cite free

    free seed
      like bool
        cite free

  task reverse, name <reverse>
    note <Reverses the Ordering.>

    take self
      cite free

    free seed
      like ordering
        cite free

  task then, name <then>
    note <Chains two orderings.>

    take self
      cite free
    take other
      like ordering
        cite free
      cite free

    free seed
      like ordering
        cite free

  task then-with, name <then_with>
    note <Chains the ordering with the given function.>

    lead f
      like fn-once
        free seed
          like ordering
            cite free

    head f

    take self
      cite free
    take f
      like f
        cite free
      cite free

    free seed
      like ordering
        cite free

  task clone, name <clone>
    note <Returns a copy of the value.>

    take self
      cite free

    free seed
      like ordering
        cite free

  task clone-from, name <clone_from>
    note <Performs copy-assignment from source.>

    take self
      cite free
    take source
      like self

  task fmt, name <fmt>
    note <Formats the value using the given formatter.>

    take self
      cite free
    take f
      like formatter
        time mask
      lock free

    free seed
      like result
        like form
        like error
          cite free
        cite free

  task hash, name <hash>
    note <Feeds this value into the given Hasher.>

    lead h
      like hasher
        cite free

    head h

    take self
      cite free
    take state
      like h
      lock free

  task hash-slice, name <hash_slice>
    note <Feeds a slice of this type into the given Hasher.>

    lead h
      like hasher
        cite free

    head h

    take data
      list self
      cite free
    take state
      like h
      lock free

  task cmp, name <cmp>
    note <This method returns an Ordering between self and other.>

    take self
      cite free
    take other
      like ordering

    free seed
      like ordering
        cite free

  task max, name <max>
    note <Compares and returns the maximum of two values.>

    take self
      cite free
    take other
      like self
        cite free
      cite free

    free seed
      like self
        cite free

  task min, name <min>
    note <Compares and returns the minimum of two values.>

    take self
      cite free
    take other
      like self
        cite free
      cite free

    free seed
      like self
        cite free

  task clamp, name <clamp>
    note <Restrict a value to a certain interval.>

    take self
      cite free
    take min
      like self
        cite free
      cite free
    take max
      like self
        cite free
      cite free

    free seed
      like self
        cite free

  task eq, name <eq>
    note <This method tests for self and other values to be equal, and is used by ==.>

    take self
      cite free
    take other
      like ordering

    free seed
      like bool
        cite free

  task ne, name <ne>
    note <This method tests for !=.>

    take self
      cite free
    take other
      like rhs

    free seed
      like bool
        cite free

  task partial-cmp, name <partial_cmp>
    note <This method returns an ordering between self and other values if one exists.>

    take self
      cite free
    take other
      like ordering

    free seed
      like option
        like ordering
          cite free
        cite free

  task lt, name <lt>
    note <This method tests less than (for self and other) and is used by the &lt; operator.>

    take self
      cite free
    take other
      like rhs

    free seed
      like bool
        cite free

  task le, name <le>
    note <This method tests less than or equal to (for self and other) and is used by the &lt;= operator.>

    take self
      cite free
    take other
      like rhs

    free seed
      like bool
        cite free

  task gt, name <gt>
    note <This method tests greater than (for self and other) and is used by the &gt; operator.>

    take self
      cite free
    take other
      like rhs

    free seed
      like bool
        cite free

  task ge, name <ge>
    note <This method tests greater than or equal to (for self and other) and is used by the &gt;= operator.>

    take self
      cite free
    take other
      like rhs

    free seed
      like bool
        cite free
