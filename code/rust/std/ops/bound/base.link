
form bound
  task as-ref, name <as_ref>
    note <Converts from &Bound&lt;T&gt; to Bound&lt;&T&gt;.>

    take self
      cite free

    free seed
      like bound
        like t
        cite free

  task as-mut, name <as_mut>
    note <Converts from &mut Bound&lt;T&gt; to Bound&lt;&mut T&gt;.>

    take self
      cite free

    free seed
      like bound
        like t
        cite free

  task map, name <map>
    note <Maps a Bound&lt;T&gt; to a Bound&lt;U&gt; by applying a function to the contained value (including both Included and Excluded), returning a Bound of the same kind.>

    lead f
      like fn-once
        take f-1, like t
        free seed
          like u
            cite free

    head u
    head f

    take self
      cite free
    take f
      like f
        cite free
      cite free

    free seed
      like bound
        like u
          cite free
        cite free

  task cloned, name <cloned>
    note <Map a Bound&lt;&T&gt; to a Bound&lt;T&gt; by cloning the contents of the bound.>

    take self
      cite free

    free seed
      like bound
        like t
          cite free
        cite free

  task clone, name <clone>
    note <Returns a copy of the value.>

    take self
      cite free

    free seed
      like bound
        like t
          cite free
        cite free

  task clone-from, name <clone_from>
    note <Performs copy-assignment from source.>

    take self
      cite free
    take source
      like self

  task fmt, name <fmt>
    note <Formats the value using the given formatter.>

    take self
      cite free
    take f
      like formatter
        time mask
      lock free

    free seed
      like result
        like form
        like error
          cite free
        cite free

  task hash, name <hash>
    note <Feeds this value into the given Hasher.>

    lead h
      like hasher
        cite free

    head h

    take self
      cite free
    take state
      like h
      lock free

  task hash-slice, name <hash_slice>
    note <Feeds a slice of this type into the given Hasher.>

    lead h
      like hasher
        cite free

    head h

    take data
      list self
      cite free
    take state
      like h
      lock free

  task eq, name <eq>
    note <This method tests for self and other values to be equal, and is used by ==.>

    take self
      cite free
    take other
      like bound
        like t
          cite free

    free seed
      like bool
        cite free

  task ne, name <ne>
    note <This method tests for !=.>

    take self
      cite free
    take other
      like bound
        like t
          cite free

    free seed
      like bool
        cite free
